# docker-compose.yml
version: '3.8'

services:
  client:
    build:
      context: ./client
      dockerfile: ../docker/Dockerfile.client
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_PLAID_ENV=sandbox
    depends_on:
      - server
    networks:
      - fintrack-network

  server:
    build:
      context: ./server
      dockerfile: ../docker/Dockerfile.server
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/fintrack
      - JWT_SECRET=your_jwt_secret_here
      - PLAID_CLIENT_ID=your_plaid_client_id
      - PLAID_SECRET=your_plaid_secret
      - PLAID_ENV=sandbox
    depends_on:
      - db
      - ml
    networks:
      - fintrack-network

  ml:
    build:
      context: ./ml
      dockerfile: ../docker/Dockerfile.ml
    ports:
      - "8000:8000"
    volumes:
      - ./ml:/app
    environment:
      - MODEL_PATH=/app/models
      - PYTHONUNBUFFERED=1
    networks:
      - fintrack-network

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/1_schema.sql
      - ./database/seeds:/docker-entrypoint-initdb.d/seeds
    environment:
      - POSTGRES_DB=fintrack
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - fintrack-network

volumes:
  postgres_data:

networks:
  fintrack-network:
    driver: bridge